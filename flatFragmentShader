#version 330 core

// Output a color for each fragment
out vec3 color;

in vec3 normal;
in vec3 toLight;
in vec4 gl_FragCoord;
in vec3 positionWorld;

uniform vec3 LightPosition;
uniform vec3 FlatColor;

void main(){
  // Bright white light
  vec3 LightColor = vec3(1,1,1);
  float LightPower = 50.0f;

  vec3 MaterialAmbientColor = vec3(0.7) * FlatColor;
  vec3 MaterialSpecularColor = vec3(0.3,0.3,0.3);

  float distance = length(LightPosition - positionWorld);

  float cosTheta = clamp(dot(normalize(normal),normalize(toLight)),0,1);

  // Light color is scaled by the amout it hits directly
  color = MaterialAmbientColor + FlatColor * LightColor * LightPower * cosTheta / (distance*distance);
}
